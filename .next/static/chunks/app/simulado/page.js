/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/simulado/page"],{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Cdevma%5C%5Cprojects%5C%5Cflashcards-enfermagem%5C%5Capp%5C%5Csimulado%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!":
/*!*************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Cdevma%5C%5Cprojects%5C%5Cflashcards-enfermagem%5C%5Capp%5C%5Csimulado%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!
  \*************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/simulado/page.tsx */ \"(app-pages-browser)/./app/simulado/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDZGV2bWElNUMlNUNwcm9qZWN0cyU1QyU1Q2ZsYXNoY2FyZHMtZW5mZXJtYWdlbSU1QyU1Q2FwcCU1QyU1Q3NpbXVsYWRvJTVDJTVDcGFnZS50c3glMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0Qmc2VydmVyPWZhbHNlISIsIm1hcHBpbmdzIjoiQUFBQSx3S0FBK0ciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLz9lYTQ4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcVXNlcnNcXFxcZGV2bWFcXFxccHJvamVjdHNcXFxcZmxhc2hjYXJkcy1lbmZlcm1hZ2VtXFxcXGFwcFxcXFxzaW11bGFkb1xcXFxwYWdlLnRzeFwiKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Cdevma%5C%5Cprojects%5C%5Cflashcards-enfermagem%5C%5Capp%5C%5Csimulado%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/api/navigation.js":
/*!**************************************************!*\
  !*** ./node_modules/next/dist/api/navigation.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client/components/navigation */ \"(app-pages-browser)/./node_modules/next/dist/client/components/navigation.js\");\n/* harmony import */ var _client_components_navigation__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_client_components_navigation__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n//# sourceMappingURL=navigation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYXBpL25hdmlnYXRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWdEOztBQUVoRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2FwaS9uYXZpZ2F0aW9uLmpzP2EzYjciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4uL2NsaWVudC9jb21wb25lbnRzL25hdmlnYXRpb25cIjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bmF2aWdhdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/api/navigation.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/simulado/page.tsx":
/*!*******************************!*\
  !*** ./app/simulado/page.tsx ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ SimuladoPage; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_questions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/questions */ \"(app-pages-browser)/./lib/questions.ts\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\nfunction SimuladoPage() {\n    _s();\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_3__.useRouter)();\n    const [currentQuestion, setCurrentQuestion] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [selectedAnswers, setSelectedAnswers] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(new Array(_lib_questions__WEBPACK_IMPORTED_MODULE_2__.questions.length).fill(null));\n    const [startTime, setStartTime] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(Date.now());\n    const [showWarning, setShowWarning] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const handleAnswer = (answerIndex)=>{\n        const newAnswers = [\n            ...selectedAnswers\n        ];\n        newAnswers[currentQuestion] = answerIndex;\n        setSelectedAnswers(newAnswers);\n    };\n    const handleNext = ()=>{\n        if (currentQuestion < _lib_questions__WEBPACK_IMPORTED_MODULE_2__.questions.length - 1) {\n            setCurrentQuestion(currentQuestion + 1);\n        }\n    };\n    const handlePrevious = ()=>{\n        if (currentQuestion > 0) {\n            setCurrentQuestion(currentQuestion - 1);\n        }\n    };\n    const handleFinish = ()=>{\n        const unanswered = selectedAnswers.filter((a)=>a === null).length;\n        if (unanswered > 0) {\n            setShowWarning(true);\n            return;\n        }\n        const endTime = Date.now();\n        const timeSpent = Math.floor((endTime - startTime) / 1000);\n        // Calculate results\n        let correct = 0;\n        const resultsByTheme = {};\n        _lib_questions__WEBPACK_IMPORTED_MODULE_2__.questions.forEach((q, index)=>{\n            const theme = q.theme;\n            if (!resultsByTheme[theme]) {\n                resultsByTheme[theme] = {\n                    correct: 0,\n                    total: 0\n                };\n            }\n            resultsByTheme[theme].total++;\n            if (selectedAnswers[index] === q.correctAnswer) {\n                correct++;\n                resultsByTheme[theme].correct++;\n            }\n        });\n        // Save to localStorage\n        const results = {\n            score: correct,\n            total: _lib_questions__WEBPACK_IMPORTED_MODULE_2__.questions.length,\n            percentage: correct / _lib_questions__WEBPACK_IMPORTED_MODULE_2__.questions.length * 100,\n            timeSpent,\n            resultsByTheme,\n            answers: selectedAnswers,\n            date: new Date().toISOString()\n        };\n        localStorage.setItem(\"lastSimuladoResult\", JSON.stringify(results));\n        router.push(\"/resultado\");\n    };\n    const progress = (currentQuestion + 1) / _lib_questions__WEBPACK_IMPORTED_MODULE_2__.questions.length * 100;\n    const answeredCount = selectedAnswers.filter((a)=>a !== null).length;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n        className: \"min-h-screen p-4 py-8\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"max-w-4xl mx-auto\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"bg-white rounded-xl shadow-lg p-4 mb-6\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex justify-between items-center mb-2\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                                        className: \"text-2xl font-bold text-indigo-600\",\n                                        children: [\n                                            \"Quest\\xe3o \",\n                                            currentQuestion + 1,\n                                            \" de \",\n                                            _lib_questions__WEBPACK_IMPORTED_MODULE_2__.questions.length\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Users\\\\devma\\\\projects\\\\flashcards-enfermagem\\\\app\\\\simulado\\\\page.tsx\",\n                                        lineNumber: 85,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"text-sm text-gray-600\",\n                                        children: [\n                                            \"Respondidas: \",\n                                            answeredCount,\n                                            \"/\",\n                                            _lib_questions__WEBPACK_IMPORTED_MODULE_2__.questions.length\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Users\\\\devma\\\\projects\\\\flashcards-enfermagem\\\\app\\\\simulado\\\\page.tsx\",\n                                        lineNumber: 88,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\devma\\\\projects\\\\flashcards-enfermagem\\\\app\\\\simulado\\\\page.tsx\",\n                                lineNumber: 84,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"w-full bg-gray-200 rounded-full h-2\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"bg-indigo-600 h-2 rounded-full transition-all duration-300\",\n                                    style: {\n                                        width: \"\".concat(progress, \"%\")\n                                    }\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\devma\\\\projects\\\\flashcards-enfermagem\\\\app\\\\simulado\\\\page.tsx\",\n                                    lineNumber: 93,\n                                    columnNumber: 13\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\devma\\\\projects\\\\flashcards-enfermagem\\\\app\\\\simulado\\\\page.tsx\",\n                                lineNumber: 92,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\devma\\\\projects\\\\flashcards-enfermagem\\\\app\\\\simulado\\\\page.tsx\",\n                        lineNumber: 83,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"bg-white rounded-xl shadow-lg p-6 md:p-8 mb-6\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"mb-4 flex gap-2 flex-wrap\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"inline-block bg-indigo-100 text-indigo-800 text-xs font-semibold px-3 py-1 rounded-full\",\n                                        children: _lib_questions__WEBPACK_IMPORTED_MODULE_2__.questions[currentQuestion].theme\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\devma\\\\projects\\\\flashcards-enfermagem\\\\app\\\\simulado\\\\page.tsx\",\n                                        lineNumber: 103,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"inline-block text-xs font-semibold px-3 py-1 rounded-full \".concat(_lib_questions__WEBPACK_IMPORTED_MODULE_2__.questions[currentQuestion].difficulty === \"easy\" ? \"bg-green-100 text-green-800\" : _lib_questions__WEBPACK_IMPORTED_MODULE_2__.questions[currentQuestion].difficulty === \"medium\" ? \"bg-yellow-100 text-yellow-800\" : \"bg-red-100 text-red-800\"),\n                                        children: _lib_questions__WEBPACK_IMPORTED_MODULE_2__.questions[currentQuestion].difficulty === \"easy\" ? \"⭐ F\\xe1cil\" : _lib_questions__WEBPACK_IMPORTED_MODULE_2__.questions[currentQuestion].difficulty === \"medium\" ? \"⭐⭐ M\\xe9dio\" : \"⭐⭐⭐ Dif\\xedcil\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\devma\\\\projects\\\\flashcards-enfermagem\\\\app\\\\simulado\\\\page.tsx\",\n                                        lineNumber: 106,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\devma\\\\projects\\\\flashcards-enfermagem\\\\app\\\\simulado\\\\page.tsx\",\n                                lineNumber: 102,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                className: \"text-xl md:text-2xl font-semibold text-gray-800 mb-6 whitespace-pre-line\",\n                                children: _lib_questions__WEBPACK_IMPORTED_MODULE_2__.questions[currentQuestion].question\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\devma\\\\projects\\\\flashcards-enfermagem\\\\app\\\\simulado\\\\page.tsx\",\n                                lineNumber: 121,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"space-y-3\",\n                                children: _lib_questions__WEBPACK_IMPORTED_MODULE_2__.questions[currentQuestion].options.map((option, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        onClick: ()=>handleAnswer(index),\n                                        className: \"w-full text-left p-4 rounded-lg border-2 transition-all duration-200 \".concat(selectedAnswers[currentQuestion] === index ? \"border-indigo-600 bg-indigo-50 shadow-md\" : \"border-gray-200 hover:border-indigo-300 hover:bg-gray-50\"),\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"flex items-start\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    className: \"font-semibold text-indigo-600 mr-3\",\n                                                    children: [\n                                                        String.fromCharCode(65 + index),\n                                                        \")\"\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"C:\\\\Users\\\\devma\\\\projects\\\\flashcards-enfermagem\\\\app\\\\simulado\\\\page.tsx\",\n                                                    lineNumber: 137,\n                                                    columnNumber: 19\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    className: \"flex-1\",\n                                                    children: option\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\devma\\\\projects\\\\flashcards-enfermagem\\\\app\\\\simulado\\\\page.tsx\",\n                                                    lineNumber: 140,\n                                                    columnNumber: 19\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\Users\\\\devma\\\\projects\\\\flashcards-enfermagem\\\\app\\\\simulado\\\\page.tsx\",\n                                            lineNumber: 136,\n                                            columnNumber: 17\n                                        }, this)\n                                    }, index, false, {\n                                        fileName: \"C:\\\\Users\\\\devma\\\\projects\\\\flashcards-enfermagem\\\\app\\\\simulado\\\\page.tsx\",\n                                        lineNumber: 127,\n                                        columnNumber: 15\n                                    }, this))\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\devma\\\\projects\\\\flashcards-enfermagem\\\\app\\\\simulado\\\\page.tsx\",\n                                lineNumber: 125,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\devma\\\\projects\\\\flashcards-enfermagem\\\\app\\\\simulado\\\\page.tsx\",\n                        lineNumber: 101,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex gap-4\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: handlePrevious,\n                                disabled: currentQuestion === 0,\n                                className: \"flex-1 bg-gray-200 hover:bg-gray-300 disabled:bg-gray-100 disabled:text-gray-400 text-gray-800 font-semibold py-3 px-6 rounded-lg transition-all duration-200\",\n                                children: \"← Anterior\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\devma\\\\projects\\\\flashcards-enfermagem\\\\app\\\\simulado\\\\page.tsx\",\n                                lineNumber: 149,\n                                columnNumber: 11\n                            }, this),\n                            currentQuestion === _lib_questions__WEBPACK_IMPORTED_MODULE_2__.questions.length - 1 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: handleFinish,\n                                className: \"flex-1 bg-green-600 hover:bg-green-700 text-white font-semibold py-3 px-6 rounded-lg transition-all duration-200\",\n                                children: \"Finalizar Simulado ✓\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\devma\\\\projects\\\\flashcards-enfermagem\\\\app\\\\simulado\\\\page.tsx\",\n                                lineNumber: 158,\n                                columnNumber: 13\n                            }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: handleNext,\n                                className: \"flex-1 bg-indigo-600 hover:bg-indigo-700 text-white font-semibold py-3 px-6 rounded-lg transition-all duration-200\",\n                                children: \"Pr\\xf3xima →\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\devma\\\\projects\\\\flashcards-enfermagem\\\\app\\\\simulado\\\\page.tsx\",\n                                lineNumber: 165,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\devma\\\\projects\\\\flashcards-enfermagem\\\\app\\\\simulado\\\\page.tsx\",\n                        lineNumber: 148,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mt-6 bg-white rounded-xl shadow-lg p-6\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                className: \"font-semibold text-gray-700 mb-3\",\n                                children: \"Navega\\xe7\\xe3o R\\xe1pida:\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\devma\\\\projects\\\\flashcards-enfermagem\\\\app\\\\simulado\\\\page.tsx\",\n                                lineNumber: 176,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"grid grid-cols-5 md:grid-cols-10 gap-2\",\n                                children: _lib_questions__WEBPACK_IMPORTED_MODULE_2__.questions.map((_, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        onClick: ()=>setCurrentQuestion(index),\n                                        className: \"aspect-square rounded-lg font-semibold transition-all duration-200 \".concat(index === currentQuestion ? \"bg-indigo-600 text-white\" : selectedAnswers[index] !== null ? \"bg-green-100 text-green-800 hover:bg-green-200\" : \"bg-gray-100 text-gray-600 hover:bg-gray-200\"),\n                                        children: index + 1\n                                    }, index, false, {\n                                        fileName: \"C:\\\\Users\\\\devma\\\\projects\\\\flashcards-enfermagem\\\\app\\\\simulado\\\\page.tsx\",\n                                        lineNumber: 179,\n                                        columnNumber: 15\n                                    }, this))\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\devma\\\\projects\\\\flashcards-enfermagem\\\\app\\\\simulado\\\\page.tsx\",\n                                lineNumber: 177,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\devma\\\\projects\\\\flashcards-enfermagem\\\\app\\\\simulado\\\\page.tsx\",\n                        lineNumber: 175,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\devma\\\\projects\\\\flashcards-enfermagem\\\\app\\\\simulado\\\\page.tsx\",\n                lineNumber: 81,\n                columnNumber: 7\n            }, this),\n            showWarning && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"bg-white rounded-xl p-6 max-w-md w-full\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                            className: \"text-xl font-bold text-red-600 mb-4\",\n                            children: \"⚠️ Aten\\xe7\\xe3o!\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\devma\\\\projects\\\\flashcards-enfermagem\\\\app\\\\simulado\\\\page.tsx\",\n                            lineNumber: 201,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"text-gray-700 mb-6\",\n                            children: [\n                                \"Voc\\xea ainda tem \",\n                                selectedAnswers.filter((a)=>a === null).length,\n                                \" quest\\xe3o(\\xf5es) sem resposta. Deseja finalizar mesmo assim?\"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\devma\\\\projects\\\\flashcards-enfermagem\\\\app\\\\simulado\\\\page.tsx\",\n                            lineNumber: 202,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex gap-3\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    onClick: ()=>setShowWarning(false),\n                                    className: \"flex-1 bg-gray-200 hover:bg-gray-300 text-gray-800 font-semibold py-2 px-4 rounded-lg\",\n                                    children: \"Revisar\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\devma\\\\projects\\\\flashcards-enfermagem\\\\app\\\\simulado\\\\page.tsx\",\n                                    lineNumber: 207,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    onClick: ()=>{\n                                        setShowWarning(false);\n                                        const endTime = Date.now();\n                                        const timeSpent = Math.floor((endTime - startTime) / 1000);\n                                        let correct = 0;\n                                        const resultsByTheme = {};\n                                        _lib_questions__WEBPACK_IMPORTED_MODULE_2__.questions.forEach((q, index)=>{\n                                            const theme = q.theme;\n                                            if (!resultsByTheme[theme]) {\n                                                resultsByTheme[theme] = {\n                                                    correct: 0,\n                                                    total: 0\n                                                };\n                                            }\n                                            resultsByTheme[theme].total++;\n                                            if (selectedAnswers[index] === q.correctAnswer) {\n                                                correct++;\n                                                resultsByTheme[theme].correct++;\n                                            }\n                                        });\n                                        const results = {\n                                            score: correct,\n                                            total: _lib_questions__WEBPACK_IMPORTED_MODULE_2__.questions.length,\n                                            percentage: correct / _lib_questions__WEBPACK_IMPORTED_MODULE_2__.questions.length * 100,\n                                            timeSpent,\n                                            resultsByTheme,\n                                            answers: selectedAnswers,\n                                            date: new Date().toISOString()\n                                        };\n                                        localStorage.setItem(\"lastSimuladoResult\", JSON.stringify(results));\n                                        router.push(\"/resultado\");\n                                    },\n                                    className: \"flex-1 bg-red-600 hover:bg-red-700 text-white font-semibold py-2 px-4 rounded-lg\",\n                                    children: \"Finalizar Assim Mesmo\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\devma\\\\projects\\\\flashcards-enfermagem\\\\app\\\\simulado\\\\page.tsx\",\n                                    lineNumber: 213,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\devma\\\\projects\\\\flashcards-enfermagem\\\\app\\\\simulado\\\\page.tsx\",\n                            lineNumber: 206,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\devma\\\\projects\\\\flashcards-enfermagem\\\\app\\\\simulado\\\\page.tsx\",\n                    lineNumber: 200,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\devma\\\\projects\\\\flashcards-enfermagem\\\\app\\\\simulado\\\\page.tsx\",\n                lineNumber: 199,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\devma\\\\projects\\\\flashcards-enfermagem\\\\app\\\\simulado\\\\page.tsx\",\n        lineNumber: 80,\n        columnNumber: 5\n    }, this);\n}\n_s(SimuladoPage, \"JKMMzFkF8RdYzU3BDTNLAGqSOKg=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_3__.useRouter\n    ];\n});\n_c = SimuladoPage;\nvar _c;\n$RefreshReg$(_c, \"SimuladoPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/simulado/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/questions.ts":
/*!**************************!*\
  !*** ./lib/questions.ts ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   questions: function() { return /* binding */ questions; }\n/* harmony export */ });\nconst questions = [\n    {\n        id: 1,\n        question: \"De acordo com a Lei n\\xba 7.498/1986, que regulamenta o exerc\\xedcio profissional da enfermagem, \\xe9 correto afirmar sobre o exerc\\xedcio da profiss\\xe3o:\",\n        options: [\n            \"\\xc9 permitido o exerc\\xedcio da enfermagem a qualquer pessoa com curso t\\xe9cnico na \\xe1rea da sa\\xfade, independente de registro no COREN.\",\n            \"O exerc\\xedcio da atividade de enfermagem \\xe9 privativo do Enfermeiro, T\\xe9cnico de Enfermagem, Auxiliar de Enfermagem e Parteira, respeitados os respectivos graus de habilita\\xe7\\xe3o e desde que inscritos no Conselho Regional de Enfermagem.\",\n            \"Somente o Enfermeiro precisa estar inscrito no COREN para exercer suas atividades profissionais.\",\n            \"A inscri\\xe7\\xe3o no COREN \\xe9 opcional para T\\xe9cnicos e Auxiliares de Enfermagem que atuam em institui\\xe7\\xf5es p\\xfablicas.\",\n            \"O exerc\\xedcio da enfermagem pode ser realizado por estudantes regularmente matriculados em cursos de enfermagem sem necessidade de registro.\"\n        ],\n        correctAnswer: 1,\n        theme: \"Lei 7.498/1986\",\n        explanation: \"A Lei 7.498/1986 estabelece que todas as categorias profissionais (Enfermeiro, T\\xe9cnico, Auxiliar e Parteira) devem estar inscritas no COREN de sua jurisdi\\xe7\\xe3o para exercer legalmente a profiss\\xe3o.\",\n        difficulty: \"medium\",\n        references: [\n            \"Lei n\\xba 7.498/1986, Art. 1\\xba e 2\\xba\"\n        ]\n    },\n    {\n        id: 2,\n        question: \"Analise as atividades descritas abaixo:\\n\\n1. Planejamento, organiza\\xe7\\xe3o, coordena\\xe7\\xe3o, execu\\xe7\\xe3o e avalia\\xe7\\xe3o dos servi\\xe7os da assist\\xeancia de enfermagem.\\n2. Consulta de enfermagem.\\n3. Prescri\\xe7\\xe3o da assist\\xeancia de enfermagem.\\n4. Cuidados diretos de enfermagem a pacientes graves com risco de vida.\\n5. Cuidados de enfermagem de maior complexidade t\\xe9cnica.\\n\\nSegundo o Decreto 94.406/1987, s\\xe3o atividades PRIVATIVAS do Enfermeiro:\",\n        options: [\n            \"Apenas as atividades 1, 2 e 3.\",\n            \"Apenas as atividades 2, 3 e 4.\",\n            \"Todas as atividades: 1, 2, 3, 4 e 5.\",\n            \"Apenas as atividades 1, 3 e 5.\",\n            \"Apenas as atividades 2, 4 e 5.\"\n        ],\n        correctAnswer: 2,\n        theme: \"Decreto 94.406/1987\",\n        explanation: \"Todas essas atividades s\\xe3o privativas do Enfermeiro conforme Art. 8\\xba do Decreto 94.406/1987. O T\\xe9cnico em Enfermagem atua sob supervis\\xe3o do Enfermeiro.\",\n        difficulty: \"hard\",\n        references: [\n            \"Decreto n\\xba 94.406/1987, Art. 8\\xba\"\n        ]\n    },\n    {\n        id: 3,\n        question: \"Em rela\\xe7\\xe3o \\xe0s atribui\\xe7\\xf5es do T\\xe9cnico em Enfermagem, estabelecidas pelo Decreto 94.406/1987, assinale a alternativa CORRETA:\",\n        options: [\n            \"Cabe ao T\\xe9cnico em Enfermagem realizar a consulta de enfermagem e prescrever medica\\xe7\\xf5es de rotina.\",\n            \"O T\\xe9cnico em Enfermagem pode prestar cuidados diretos a pacientes graves com risco de vida, desde que possua experi\\xeancia comprovada.\",\n            \"S\\xe3o atribui\\xe7\\xf5es do T\\xe9cnico em Enfermagem: assistir ao Enfermeiro no planejamento e supervis\\xe3o das atividades de assist\\xeancia, executar a\\xe7\\xf5es assistenciais de enfermagem exceto as privativas do Enfermeiro, e participar da programa\\xe7\\xe3o da assist\\xeancia de enfermagem.\",\n            \"O T\\xe9cnico em Enfermagem tem autonomia para tomar decis\\xf5es sobre cuidados de maior complexidade t\\xe9cnica sem supervis\\xe3o do Enfermeiro.\",\n            \"Compete ao T\\xe9cnico em Enfermagem a avalia\\xe7\\xe3o completa do paciente e a elabora\\xe7\\xe3o do diagn\\xf3stico de enfermagem.\"\n        ],\n        correctAnswer: 2,\n        theme: \"Decreto 94.406/1987\",\n        explanation: \"O Art. 10 do Decreto 94.406/1987 estabelece que o T\\xe9cnico atua sob supervis\\xe3o do Enfermeiro, executando atividades auxiliares de n\\xedvel m\\xe9dio t\\xe9cnico.\",\n        difficulty: \"medium\",\n        references: [\n            \"Decreto n\\xba 94.406/1987, Art. 10\"\n        ]\n    },\n    {\n        id: 4,\n        question: \"Segundo o Decreto n\\xba 94.406/1987, s\\xe3o atribui\\xe7\\xf5es do T\\xe9cnico em Enfermagem, EXCETO:\",\n        options: [\n            \"Participar da programa\\xe7\\xe3o da assist\\xeancia de enfermagem.\",\n            \"Executar a\\xe7\\xf5es de tratamento simples.\",\n            \"Participar dos programas de treinamento e aprimoramento de pessoal de sa\\xfade, particularmente nos programas de educa\\xe7\\xe3o continuada.\",\n            \"Prescrever a assist\\xeancia de enfermagem de acordo com o plano terap\\xeautico.\",\n            \"Preparar o paciente para exames e tratamentos.\"\n        ],\n        correctAnswer: 3,\n        theme: \"Decreto 94.406/1987\",\n        explanation: \"A prescri\\xe7\\xe3o da assist\\xeancia de enfermagem \\xe9 atividade privativa do Enfermeiro, conforme Art. 8\\xba, al\\xednea c do Decreto 94.406/1987.\",\n        difficulty: \"medium\",\n        references: [\n            \"Decreto n\\xba 94.406/1987, Art. 8\\xba e 10\"\n        ]\n    },\n    {\n        id: 5,\n        question: \"De acordo com a Resolu\\xe7\\xe3o COFEN n\\xba 564/2017 (C\\xf3digo de \\xc9tica dos Profissionais de Enfermagem), constitui DIREITO do profissional:\",\n        options: [\n            \"Executar prescri\\xe7\\xf5es de qualquer natureza, que comprometam a seguran\\xe7a da pessoa.\",\n            \"Recusar-se a executar atividades que n\\xe3o sejam de sua compet\\xeancia t\\xe9cnica, cient\\xedfica, \\xe9tica e legal.\",\n            \"Realizar procedimentos sem o conhecimento e consentimento da pessoa, exceto em iminente risco de morte.\",\n            \"Divulgar informa\\xe7\\xf5es sobre atendimentos em redes sociais.\",\n            \"Praticar ou ser conivente com crime, contraven\\xe7\\xe3o penal ou ato infringente \\xe0 \\xe9tica profissional.\"\n        ],\n        correctAnswer: 1,\n        theme: \"C\\xf3digo de \\xc9tica\",\n        explanation: \"O Art. 8\\xba da Resolu\\xe7\\xe3o COFEN 564/2017 garante ao profissional o direito de recusar-se a executar atividades que n\\xe3o sejam de sua compet\\xeancia.\",\n        difficulty: \"medium\",\n        references: [\n            \"Resolu\\xe7\\xe3o COFEN n\\xba 564/2017, Art. 8\\xba\"\n        ]\n    },\n    {\n        id: 6,\n        question: \"Considerando os princ\\xedpios fundamentais do C\\xf3digo de \\xc9tica dos Profissionais de Enfermagem (Resolu\\xe7\\xe3o COFEN 564/2017), analise as assertivas:\\n\\n1. A enfermagem \\xe9 uma profiss\\xe3o comprometida com a sa\\xfade e qualidade de vida da pessoa, fam\\xedlia e coletividade.\\n2. O profissional de enfermagem deve atuar com autonomia e em conson\\xe2ncia com os preceitos \\xe9ticos e legais.\\n3. O profissional de enfermagem deve respeitar a vida, a dignidade e os direitos humanos, em todas as suas dimens\\xf5es.\\n4. O profissional de enfermagem pode exercer suas atividades livre de discrimina\\xe7\\xe3o apenas em rela\\xe7\\xe3o a ra\\xe7a e g\\xeanero.\\n\\nEst\\xe3o CORRETAS:\",\n        options: [\n            \"Apenas as assertivas 1 e 2.\",\n            \"Apenas as assertivas 1, 2 e 3.\",\n            \"Apenas as assertivas 2, 3 e 4.\",\n            \"Apenas as assertivas 1, 3 e 4.\",\n            \"Todas as assertivas.\"\n        ],\n        correctAnswer: 1,\n        theme: \"C\\xf3digo de \\xc9tica\",\n        explanation: \"As assertivas 1, 2 e 3 est\\xe3o corretas. A assertiva 4 est\\xe1 incorreta pois o profissional deve exercer suas atividades livre de qualquer tipo de discrimina\\xe7\\xe3o (social, econ\\xf4mica, religiosa, pol\\xedtica, et\\xe1ria, de g\\xeanero, orienta\\xe7\\xe3o sexual, etc.), n\\xe3o apenas ra\\xe7a e g\\xeanero.\",\n        difficulty: \"hard\",\n        references: [\n            \"Resolu\\xe7\\xe3o COFEN n\\xba 564/2017, Princ\\xedpios Fundamentais\"\n        ]\n    },\n    {\n        id: 7,\n        question: \"Segundo a Resolu\\xe7\\xe3o COFEN 564/2017, s\\xe3o deveres do profissional de enfermagem, EXCETO:\",\n        options: [\n            \"Prestar assist\\xeancia de enfermagem sem discrimina\\xe7\\xe3o de qualquer natureza.\",\n            \"Respeitar o pudor, a privacidade e a intimidade do ser humano, em todo seu ciclo vital.\",\n            \"Registrar no prontu\\xe1rio e em outros documentos as informa\\xe7\\xf5es inerentes e indispens\\xe1veis ao processo de cuidar.\",\n            \"Executar prescri\\xe7\\xf5es medicamentosas mesmo sem certificar-se da natureza das drogas prescritas, respeitando os direitos do paciente.\",\n            \"Comunicar formalmente ao Conselho Regional de Enfermagem e aos \\xf3rg\\xe3os competentes fatos que infrinjam dispositivos legais.\"\n        ],\n        correctAnswer: 3,\n        theme: \"C\\xf3digo de \\xc9tica\",\n        explanation: \"\\xc9 PROIBIDO administrar medicamentos sem certificar-se da natureza das drogas prescritas e da exist\\xeancia de risco para o cliente (Art. 37 das Proibi\\xe7\\xf5es). O item descrito \\xe9 uma proibi\\xe7\\xe3o, n\\xe3o um dever.\",\n        difficulty: \"medium\",\n        references: [\n            \"Resolu\\xe7\\xe3o COFEN n\\xba 564/2017, Art. 37\"\n        ]\n    },\n    {\n        id: 8,\n        question: \"Um T\\xe9cnico em Enfermagem, durante seu plant\\xe3o na Unidade de Terapia Intensiva, recebe uma prescri\\xe7\\xe3o m\\xe9dica para administrar um medicamento que ele desconhece. Considerando o C\\xf3digo de \\xc9tica dos Profissionais de Enfermagem, a conduta CORRETA do profissional \\xe9:\",\n        options: [\n            \"Administrar o medicamento conforme prescrito, pois \\xe9 de responsabilidade do m\\xe9dico prescritor.\",\n            \"Recusar-se a administrar o medicamento e solicitar que outro profissional o fa\\xe7a.\",\n            \"Certificar-se da natureza do medicamento, da sua finalidade, dos riscos e efeitos antes de administr\\xe1-lo, consultando fontes confi\\xe1veis ou o prescritor.\",\n            \"Administrar o medicamento e depois pesquisar sobre ele para aprender.\",\n            \"Solicitar ao paciente que pesquise sobre o medicamento na internet antes da administra\\xe7\\xe3o.\"\n        ],\n        correctAnswer: 2,\n        theme: \"C\\xf3digo de \\xc9tica\",\n        explanation: \"Conforme o Art. 37 da Resolu\\xe7\\xe3o COFEN 564/2017, \\xe9 proibido administrar medicamentos sem conhecer a a\\xe7\\xe3o da droga e sem certificar-se da possibilidade de riscos. O profissional deve buscar informa\\xe7\\xf5es antes de administrar.\",\n        difficulty: \"medium\",\n        references: [\n            \"Resolu\\xe7\\xe3o COFEN n\\xba 564/2017, Art. 37\"\n        ]\n    },\n    {\n        id: 9,\n        question: \"Em rela\\xe7\\xe3o \\xe0s infra\\xe7\\xf5es e penalidades previstas no C\\xf3digo de \\xc9tica dos Profissionais de Enfermagem (Resolu\\xe7\\xe3o COFEN 564/2017), considere as seguintes afirmativas:\\n\\n1. A gravidade da infra\\xe7\\xe3o \\xe9 caracterizada por meio da an\\xe1lise da a\\xe7\\xe3o do profissional.\\n2. As penalidades previstas s\\xe3o: advert\\xeancia verbal, multa, censura, suspens\\xe3o do exerc\\xedcio profissional e cassa\\xe7\\xe3o do direito ao exerc\\xedcio profissional.\\n3. A penalidade de cassa\\xe7\\xe3o consiste na perda do direito ao exerc\\xedcio da enfermagem e \\xe9 aplicada somente em casos de extrema gravidade.\\n4. A reincid\\xeancia em infra\\xe7\\xe3o \\xe9tica n\\xe3o agrava a penalidade aplicada.\\n\\nEst\\xe3o CORRETAS as afirmativas:\",\n        options: [\n            \"1, 2 e 3, apenas.\",\n            \"1, 2 e 4, apenas.\",\n            \"2, 3 e 4, apenas.\",\n            \"1, 3 e 4, apenas.\",\n            \"Todas as afirmativas.\"\n        ],\n        correctAnswer: 0,\n        theme: \"C\\xf3digo de \\xc9tica\",\n        explanation: \"As afirmativas 1, 2 e 3 est\\xe3o corretas. A afirmativa 4 est\\xe1 incorreta, pois a reincid\\xeancia em infra\\xe7\\xe3o \\xe9tica \\xe9 considerada agravante da penalidade.\",\n        difficulty: \"hard\",\n        references: [\n            \"Resolu\\xe7\\xe3o COFEN n\\xba 564/2017, Art. 118 a 122\"\n        ]\n    },\n    {\n        id: 10,\n        question: \"Um paciente internado em uma Unidade de Pronto Atendimento solicita ao T\\xe9cnico em Enfermagem uma c\\xf3pia de seu prontu\\xe1rio. De acordo com os princ\\xedpios \\xe9ticos e legais, o profissional deve:\",\n        options: [\n            \"Negar o acesso ao prontu\\xe1rio, pois o paciente n\\xe3o tem direito de visualiz\\xe1-lo durante a interna\\xe7\\xe3o.\",\n            \"Entregar o prontu\\xe1rio original ao paciente para que ele fa\\xe7a c\\xf3pias.\",\n            \"Informar ao paciente que ele tem direito de acesso \\xe0s informa\\xe7\\xf5es contidas em seu prontu\\xe1rio e orient\\xe1-lo sobre os procedimentos institucionais para obten\\xe7\\xe3o de c\\xf3pia.\",\n            \"Fornecer as informa\\xe7\\xf5es verbalmente, mas negar o acesso f\\xedsico ao prontu\\xe1rio.\",\n            \"Solicitar autoriza\\xe7\\xe3o judicial antes de permitir qualquer acesso do paciente ao seu prontu\\xe1rio.\"\n        ],\n        correctAnswer: 2,\n        theme: \"C\\xf3digo de \\xc9tica\",\n        explanation: \"O paciente tem direito de acesso \\xe0s informa\\xe7\\xf5es sobre sua sa\\xfade. O profissional deve orient\\xe1-lo sobre os procedimentos corretos, geralmente atrav\\xe9s do SAME ou setor respons\\xe1vel.\",\n        difficulty: \"medium\",\n        references: [\n            \"Resolu\\xe7\\xe3o COFEN n\\xba 564/2017\",\n            \"Lei n\\xba 13.787/2018\"\n        ]\n    },\n    {\n        id: 11,\n        question: \"A Pol\\xedtica Nacional de Aten\\xe7\\xe3o B\\xe1sica (PNAB), estabelecida pela Portaria n\\xba 2.436/2017, define a Aten\\xe7\\xe3o B\\xe1sica como priorit\\xe1ria na Rede de Aten\\xe7\\xe3o \\xe0 Sa\\xfade (RAS). Sobre as caracter\\xedsticas da Aten\\xe7\\xe3o B\\xe1sica, assinale a alternativa CORRETA:\",\n        options: [\n            \"\\xc9 desenvolvida exclusivamente em Unidades B\\xe1sicas de Sa\\xfade (UBS) com estrutura f\\xedsica padronizada.\",\n            \"Caracteriza-se por um conjunto de a\\xe7\\xf5es de sa\\xfade, no \\xe2mbito individual e coletivo, que abrange promo\\xe7\\xe3o, preven\\xe7\\xe3o, prote\\xe7\\xe3o, diagn\\xf3stico, tratamento, reabilita\\xe7\\xe3o, redu\\xe7\\xe3o de danos e manuten\\xe7\\xe3o da sa\\xfade.\",\n            \"Restringe-se a a\\xe7\\xf5es de promo\\xe7\\xe3o e preven\\xe7\\xe3o, n\\xe3o realizando procedimentos curativos.\",\n            \"\\xc9 destinada exclusivamente ao atendimento de urg\\xeancias e emerg\\xeancias de baixa complexidade.\",\n            \"Realiza apenas encaminhamentos para servi\\xe7os especializados, sem resolutividade pr\\xf3pria.\"\n        ],\n        correctAnswer: 1,\n        theme: \"Aten\\xe7\\xe3o B\\xe1sica\",\n        explanation: \"A PNAB 2017 define a AB como desenvolvida com pr\\xe1ticas de cuidado integrado e gest\\xe3o qualificada, abrangendo promo\\xe7\\xe3o, preven\\xe7\\xe3o, diagn\\xf3stico, tratamento, reabilita\\xe7\\xe3o e redu\\xe7\\xe3o de danos.\",\n        difficulty: \"medium\",\n        references: [\n            \"Portaria GM/MS n\\xba 2.436/2017\"\n        ]\n    },\n    {\n        id: 12,\n        question: \"Na Estrat\\xe9gia Sa\\xfade da Fam\\xedlia (ESF), o T\\xe9cnico em Enfermagem desenvolve a\\xe7\\xf5es espec\\xedficas. Identifique a atribui\\xe7\\xe3o que N\\xc3O compete ao T\\xe9cnico em Enfermagem na ESF:\",\n        options: [\n            \"Realizar procedimentos de enfermagem dentro das suas compet\\xeancias t\\xe9cnicas.\",\n            \"Realizar consulta de enfermagem e solicita\\xe7\\xe3o de exames complementares.\",\n            \"Executar a\\xe7\\xf5es de educa\\xe7\\xe3o em sa\\xfade \\xe0 popula\\xe7\\xe3o adscrita.\",\n            \"Realizar curativos, administra\\xe7\\xe3o de medicamentos por via oral, t\\xf3pica, intramuscular e endovenosa.\",\n            \"Participar do gerenciamento dos insumos necess\\xe1rios para o adequado funcionamento da UBS.\"\n        ],\n        correctAnswer: 1,\n        theme: \"Aten\\xe7\\xe3o B\\xe1sica\",\n        explanation: \"A consulta de enfermagem e solicita\\xe7\\xe3o de exames complementares s\\xe3o atividades privativas do Enfermeiro, conforme Decreto 94.406/1987.\",\n        difficulty: \"easy\",\n        references: [\n            \"Portaria GM/MS n\\xba 2.436/2017\",\n            \"Decreto n\\xba 94.406/1987\"\n        ]\n    },\n    {\n        id: 13,\n        question: \"O Programa Nacional de Imuniza\\xe7\\xe3o (PNI) \\xe9 uma das principais a\\xe7\\xf5es desenvolvidas na Aten\\xe7\\xe3o B\\xe1sica. Em rela\\xe7\\xe3o \\xe0 atua\\xe7\\xe3o do T\\xe9cnico em Enfermagem na sala de vacina\\xe7\\xe3o, analise as assertivas:\\n\\n1. O T\\xe9cnico pode administrar vacinas de acordo com o calend\\xe1rio vacinal, sob supervis\\xe3o do Enfermeiro.\\n2. Compete ao T\\xe9cnico realizar a notifica\\xe7\\xe3o de eventos adversos p\\xf3s-vacina\\xe7\\xe3o.\\n3. O T\\xe9cnico tem autonomia para definir esquemas vacinais especiais sem consultar o Enfermeiro.\\n4. O T\\xe9cnico deve orientar os usu\\xe1rios sobre as vacinas, rea\\xe7\\xf5es esperadas e cuidados.\\n\\nEst\\xe3o CORRETAS:\",\n        options: [\n            \"1, 2 e 4, apenas.\",\n            \"1, 2 e 3, apenas.\",\n            \"2, 3 e 4, apenas.\",\n            \"1, 3 e 4, apenas.\",\n            \"Todas as assertivas.\"\n        ],\n        correctAnswer: 0,\n        theme: \"Aten\\xe7\\xe3o B\\xe1sica\",\n        explanation: \"As assertivas 1, 2 e 4 est\\xe3o corretas. A assertiva 3 est\\xe1 incorreta pois esquemas especiais devem ser avaliados pelo Enfermeiro ou m\\xe9dico respons\\xe1vel.\",\n        difficulty: \"hard\",\n        references: [\n            \"Manual de Normas e Procedimentos para Vacina\\xe7\\xe3o - MS\"\n        ]\n    },\n    {\n        id: 14,\n        question: \"Um T\\xe9cnico em Enfermagem atua em uma UPA 24h (Unidade de Pronto Atendimento), servi\\xe7o de m\\xe9dia complexidade. Durante o atendimento de um paciente com quadro de dor tor\\xe1cica, qual deve ser a conduta PRIORIT\\xc1RIA do profissional?\",\n        options: [\n            \"Solicitar que o paciente aguarde na sala de espera at\\xe9 que um m\\xe9dico esteja dispon\\xedvel.\",\n            \"Comunicar imediatamente o Enfermeiro e/ou m\\xe9dico sobre o caso, manter o paciente em repouso, verificar sinais vitais e monitorar continuamente.\",\n            \"Administrar analg\\xe9sicos de rotina para aliviar a dor antes de comunicar ao m\\xe9dico.\",\n            \"Orientar o paciente a procurar um cardiologista em consulta ambulatorial posterior.\",\n            \"Realizar apenas o registro dos sinais vitais e aguardar orienta\\xe7\\xe3o para outras condutas.\"\n        ],\n        correctAnswer: 1,\n        theme: \"M\\xe9dia Complexidade\",\n        explanation: \"Dor tor\\xe1cica \\xe9 sinal de alerta para emerg\\xeancias cardiovasculares. A comunica\\xe7\\xe3o imediata, repouso e monitoriza\\xe7\\xe3o s\\xe3o fundamentais enquanto se aguarda avalia\\xe7\\xe3o m\\xe9dica.\",\n        difficulty: \"medium\",\n        references: [\n            \"Protocolos de Urg\\xeancia e Emerg\\xeancia\"\n        ]\n    },\n    {\n        id: 15,\n        question: \"Sobre a Central de Material e Esteriliza\\xe7\\xe3o (CME), servi\\xe7o de apoio \\xe0 m\\xe9dia e alta complexidade, \\xe9 CORRETO afirmar que compete ao T\\xe9cnico em Enfermagem:\",\n        options: [\n            \"Realizar apenas a limpeza dos artigos, sendo a esteriliza\\xe7\\xe3o privativa do Enfermeiro.\",\n            \"Executar o processamento de produtos para sa\\xfade, incluindo limpeza, desinfec\\xe7\\xe3o, preparo, esteriliza\\xe7\\xe3o e armazenamento, sob supervis\\xe3o do Enfermeiro.\",\n            \"Supervisionar e coordenar todas as etapas do processamento de materiais sem necessidade de supervis\\xe3o.\",\n            \"Atuar exclusivamente na distribui\\xe7\\xe3o de materiais est\\xe9reis \\xe0s unidades.\",\n            \"Realizar testes biol\\xf3gicos e liberar cargas de esteriliza\\xe7\\xe3o sem supervis\\xe3o do Enfermeiro.\"\n        ],\n        correctAnswer: 1,\n        theme: \"M\\xe9dia Complexidade\",\n        explanation: \"O T\\xe9cnico executa as atividades de processamento de materiais sob supervis\\xe3o do Enfermeiro, que \\xe9 respons\\xe1vel t\\xe9cnico pela CME.\",\n        difficulty: \"medium\",\n        references: [\n            \"RDC ANVISA n\\xba 15/2012\"\n        ]\n    },\n    {\n        id: 16,\n        question: \"Em rela\\xe7\\xe3o \\xe0 atua\\xe7\\xe3o do T\\xe9cnico em Enfermagem no Centro Cir\\xfargico, identifique a assertiva INCORRETA:\",\n        options: [\n            \"Compete ao T\\xe9cnico preparar a sala cir\\xfargica, verificando o funcionamento de equipamentos e disponibilidade de materiais.\",\n            \"O T\\xe9cnico pode atuar como circulante de sala, auxiliando a equipe cir\\xfargica durante o procedimento.\",\n            \"\\xc9 atribui\\xe7\\xe3o do T\\xe9cnico realizar o registro de enfermagem no transoperat\\xf3rio.\",\n            \"O T\\xe9cnico tem autonomia para realizar a visita pr\\xe9-operat\\xf3ria e planejamento da assist\\xeancia de enfermagem perioperat\\xf3ria.\",\n            \"O T\\xe9cnico participa dos cuidados p\\xf3s-operat\\xf3rios imediatos, realizando monitoriza\\xe7\\xe3o de sinais vitais.\"\n        ],\n        correctAnswer: 3,\n        theme: \"M\\xe9dia Complexidade\",\n        explanation: \"A visita pr\\xe9-operat\\xf3ria e planejamento da assist\\xeancia perioperat\\xf3ria s\\xe3o atividades privativas do Enfermeiro, conforme Resolu\\xe7\\xe3o COFEN 543/2017.\",\n        difficulty: \"medium\",\n        references: [\n            \"Resolu\\xe7\\xe3o COFEN n\\xba 543/2017\"\n        ]\n    },\n    {\n        id: 17,\n        question: \"Na Unidade de Terapia Intensiva (UTI), servi\\xe7o de alta complexidade, o T\\xe9cnico em Enfermagem deve atuar sob supervis\\xe3o direta e cont\\xednua do Enfermeiro. Sobre a atua\\xe7\\xe3o do T\\xe9cnico na UTI, \\xe9 CORRETO afirmar:\",\n        options: [\n            \"O T\\xe9cnico pode avaliar e tomar decis\\xf5es sobre altera\\xe7\\xf5es hemodin\\xe2micas graves sem comunicar imediatamente ao Enfermeiro.\",\n            \"Compete ao T\\xe9cnico realizar a monitoriza\\xe7\\xe3o de par\\xe2metros vitais, administrar medica\\xe7\\xf5es prescritas e comunicar prontamente altera\\xe7\\xf5es ao Enfermeiro.\",\n            \"O T\\xe9cnico tem autonomia para ajustar par\\xe2metros ventilat\\xf3rios de acordo com gasometrias arteriais.\",\n            \"Cabe ao T\\xe9cnico realizar a passagem de cateter venoso central e cateter de Swan-Ganz.\",\n            \"O T\\xe9cnico \\xe9 respons\\xe1vel pela prescri\\xe7\\xe3o de cuidados de enfermagem aos pacientes cr\\xedticos.\"\n        ],\n        correctAnswer: 1,\n        theme: \"Alta Complexidade\",\n        explanation: \"Na UTI, o T\\xe9cnico executa cuidados sob supervis\\xe3o cont\\xednua do Enfermeiro, realizando monitoriza\\xe7\\xe3o e administra\\xe7\\xe3o de medica\\xe7\\xf5es, mas sempre comunicando altera\\xe7\\xf5es para decis\\xf5es do Enfermeiro.\",\n        difficulty: \"medium\",\n        references: [\n            \"RDC ANVISA n\\xba 7/2010\",\n            \"Decreto n\\xba 94.406/1987\"\n        ]\n    },\n    {\n        id: 18,\n        question: \"Um paciente em p\\xf3s-operat\\xf3rio imediato de cirurgia card\\xedaca encontra-se na UTI com diversos dispositivos: ventila\\xe7\\xe3o mec\\xe2nica, cateter venoso central, dreno de t\\xf3rax, sonda vesical de demora e monitoriza\\xe7\\xe3o hemodin\\xe2mica invasiva. Considerando as atribui\\xe7\\xf5es do T\\xe9cnico em Enfermagem neste cen\\xe1rio de alta complexidade, analise as afirmativas:\\n\\n1. O T\\xe9cnico deve verificar e registrar os sinais vitais e d\\xe9bito urin\\xe1rio em intervalos regulares.\\n2. Compete ao T\\xe9cnico avaliar o n\\xedvel de consci\\xeancia e realizar aspira\\xe7\\xe3o de vias a\\xe9reas quando necess\\xe1rio.\\n3. O T\\xe9cnico pode, de forma aut\\xf4noma, decidir sobre o desmame da ventila\\xe7\\xe3o mec\\xe2nica.\\n4. Cabe ao T\\xe9cnico comunicar imediatamente ao Enfermeiro qualquer altera\\xe7\\xe3o no quadro cl\\xednico do paciente.\\n\\nEst\\xe3o CORRETAS:\",\n        options: [\n            \"1 e 4, apenas.\",\n            \"1, 2 e 4, apenas.\",\n            \"2, 3 e 4, apenas.\",\n            \"1, 2 e 3, apenas.\",\n            \"Todas as afirmativas.\"\n        ],\n        correctAnswer: 1,\n        theme: \"Alta Complexidade\",\n        explanation: \"As afirmativas 1, 2 e 4 est\\xe3o corretas. A afirmativa 3 est\\xe1 incorreta pois o desmame ventilat\\xf3rio \\xe9 decis\\xe3o do Enfermeiro e do m\\xe9dico, n\\xe3o sendo atribui\\xe7\\xe3o aut\\xf4noma do T\\xe9cnico.\",\n        difficulty: \"hard\",\n        references: [\n            \"RDC ANVISA n\\xba 7/2010\"\n        ]\n    },\n    {\n        id: 19,\n        question: \"Em servi\\xe7os de hemodi\\xe1lise, considerado de alta complexidade, o T\\xe9cnico em Enfermagem realiza atividades espec\\xedficas. Assinale a alternativa que apresenta uma atribui\\xe7\\xe3o que N\\xc3O compete ao T\\xe9cnico em Enfermagem na hemodi\\xe1lise:\",\n        options: [\n            \"Realizar a monitoriza\\xe7\\xe3o dos sinais vitais durante a sess\\xe3o de hemodi\\xe1lise.\",\n            \"Puncionar acesso vascular (f\\xedstula arteriovenosa) ap\\xf3s treinamento espec\\xedfico e sob supervis\\xe3o.\",\n            \"Prescrever o peso seco do paciente e os par\\xe2metros da di\\xe1lise (fluxo de sangue, tempo de sess\\xe3o).\",\n            \"Auxiliar o Enfermeiro na avalia\\xe7\\xe3o das condi\\xe7\\xf5es do acesso vascular.\",\n            \"Detectar e comunicar intercorr\\xeancias durante a sess\\xe3o dial\\xedtica.\"\n        ],\n        correctAnswer: 2,\n        theme: \"Alta Complexidade\",\n        explanation: \"A prescri\\xe7\\xe3o de peso seco e par\\xe2metros dial\\xedticos s\\xe3o atribui\\xe7\\xf5es privativas do Enfermeiro e do m\\xe9dico nefrologista, n\\xe3o do T\\xe9cnico em Enfermagem.\",\n        difficulty: \"medium\",\n        references: [\n            \"RDC ANVISA n\\xba 11/2014\",\n            \"Resolu\\xe7\\xe3o COFEN n\\xba 515/2016\"\n        ]\n    },\n    {\n        id: 20,\n        question: \"Considerando os princ\\xedpios do Sistema \\xdanico de Sa\\xfade (SUS) e os n\\xedveis de aten\\xe7\\xe3o \\xe0 sa\\xfade, avalie as seguintes afirma\\xe7\\xf5es sobre a atua\\xe7\\xe3o do T\\xe9cnico em Enfermagem:\\n\\n1. Na Aten\\xe7\\xe3o B\\xe1sica, o T\\xe9cnico atua com foco em a\\xe7\\xf5es de promo\\xe7\\xe3o, preven\\xe7\\xe3o e cuidados de menor densidade tecnol\\xf3gica.\\n2. Na M\\xe9dia Complexidade, o T\\xe9cnico realiza procedimentos especializados sob supervis\\xe3o do Enfermeiro.\\n3. Na Alta Complexidade, o T\\xe9cnico pode prestar cuidados diretos a pacientes cr\\xedticos, mas sempre sob supervis\\xe3o direta e cont\\xednua do Enfermeiro.\\n4. Em todos os n\\xedveis de aten\\xe7\\xe3o, o T\\xe9cnico tem autonomia para realizar consulta de enfermagem e prescrever cuidados.\\n\\nEst\\xe3o CORRETAS:\",\n        options: [\n            \"1, 2 e 3, apenas.\",\n            \"1, 2 e 4, apenas.\",\n            \"2, 3 e 4, apenas.\",\n            \"1, 3 e 4, apenas.\",\n            \"Todas as afirma\\xe7\\xf5es.\"\n        ],\n        correctAnswer: 0,\n        theme: \"Atua\\xe7\\xe3o no SUS\",\n        explanation: \"As afirma\\xe7\\xf5es 1, 2 e 3 est\\xe3o corretas. A afirma\\xe7\\xe3o 4 est\\xe1 incorreta pois consulta de enfermagem e prescri\\xe7\\xe3o de cuidados s\\xe3o privativas do Enfermeiro em todos os n\\xedveis de aten\\xe7\\xe3o.\",\n        difficulty: \"hard\",\n        references: [\n            \"Lei n\\xba 7.498/1986\",\n            \"Decreto n\\xba 94.406/1987\",\n            \"Portaria GM/MS n\\xba 2.436/2017\"\n        ]\n    }\n];\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/questions.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider'); // TODO: Delete with enableRenderableContext\n\nvar REACT_CONSUMER_TYPE = Symbol.for('react.consumer');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\nvar enableRenderableContext = false;\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false;\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n}\n\nvar REACT_CLIENT_REFERENCE$2 = Symbol.for('react.client.reference'); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  if (typeof type === 'function') {\n    if (type.$$typeof === REACT_CLIENT_REFERENCE$2) {\n      // TODO: Create a convention for naming client references with debug info.\n      return null;\n    }\n\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n    case REACT_CACHE_TYPE:\n      {\n        return 'Cache';\n      }\n\n  }\n\n  if (typeof type === 'object') {\n    {\n      if (typeof type.tag === 'number') {\n        error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n      }\n    }\n\n    switch (type.$$typeof) {\n      case REACT_PROVIDER_TYPE:\n        {\n          var provider = type;\n          return getContextName(provider._context) + '.Provider';\n        }\n\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n\n        {\n          return getContextName(context) + '.Consumer';\n        }\n\n      case REACT_CONSUMER_TYPE:\n        {\n          return null;\n        }\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar assign = Object.assign;\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n    return type;\n  }\n} // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || enableRenderableContext  || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n/**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */\n\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */\n\n\n  var RunInRootFrame = {\n    DetermineComponentFrameRoot: function () {\n      var control;\n\n      try {\n        // This should throw.\n        if (construct) {\n          // Something should be setting the props in the constructor.\n          var Fake = function () {\n            throw Error();\n          }; // $FlowFixMe[prop-missing]\n\n\n          Object.defineProperty(Fake.prototype, 'props', {\n            set: function () {\n              // We use a throwing setter instead of frozen or non-writable props\n              // because that won't throw in a non-strict mode function.\n              throw Error();\n            }\n          });\n\n          if (typeof Reflect === 'object' && Reflect.construct) {\n            // We construct a different control for this case to include any extra\n            // frames added by the construct call.\n            try {\n              Reflect.construct(Fake, []);\n            } catch (x) {\n              control = x;\n            }\n\n            Reflect.construct(fn, [], Fake);\n          } else {\n            try {\n              Fake.call();\n            } catch (x) {\n              control = x;\n            } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n            fn.call(Fake.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (x) {\n            control = x;\n          } // TODO(luna): This will currently only throw if the function component\n          // tries to access React/ReactDOM/props. We should probably make this throw\n          // in simple components too\n\n\n          var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n          // component, which we don't yet support. Attach a noop catch handler to\n          // silence the error.\n          // TODO: Implement component stacks for async client components?\n\n          if (maybePromise && typeof maybePromise.catch === 'function') {\n            maybePromise.catch(function () {});\n          }\n        }\n      } catch (sample) {\n        // This is inlined manually because closure doesn't do it for us.\n        if (sample && control && typeof sample.stack === 'string') {\n          return [sample.stack, control.stack];\n        }\n      }\n\n      return [null, null];\n    }\n  }; // $FlowFixMe[prop-missing]\n\n  RunInRootFrame.DetermineComponentFrameRoot.displayName = 'DetermineComponentFrameRoot';\n  var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, 'name'); // Before ES6, the `name` property was not configurable.\n\n  if (namePropDescriptor && namePropDescriptor.configurable) {\n    // V8 utilizes a function's `name` property when generating a stack trace.\n    Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // Configurable properties can be updated even if its writable descriptor\n    // is set to `false`.\n    // $FlowFixMe[cannot-write]\n    'name', {\n      value: 'DetermineComponentFrameRoot'\n    });\n  }\n\n  try {\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n        sampleStack = _RunInRootFrame$Deter[0],\n        controlStack = _RunInRootFrame$Deter[1];\n\n    if (sampleStack && controlStack) {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sampleStack.split('\\n');\n      var controlLines = controlStack.split('\\n');\n      var s = 0;\n      var c = 0;\n\n      while (s < sampleLines.length && !sampleLines[s].includes('DetermineComponentFrameRoot')) {\n        s++;\n      }\n\n      while (c < controlLines.length && !controlLines[c].includes('DetermineComponentFrameRoot')) {\n        c++;\n      } // We couldn't find our intentionally injected common root frame, attempt\n      // to find another common root frame by search from the bottom of the\n      // control stack...\n\n\n      if (s === sampleLines.length || c === controlLines.length) {\n        s = sampleLines.length - 1;\n        c = controlLines.length - 1;\n\n        while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n          // We expect at least one stack frame to be shared.\n          // Typically this will be the root most one. However, stack frames may be\n          // cut off due to maximum stack limits. In this case, one maybe cut off\n          // earlier than the other. We assume that the sample is longer or the same\n          // and there for cut off earlier. So we should find the root most frame in\n          // the sample somewhere in the control.\n          c--;\n        }\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                if (true) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\nvar REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    {\n      var warnAboutAccessingRef = function () {\n        if (!specialPropRefWarningShown) {\n          specialPropRefWarningShown = true;\n\n          error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n        }\n      };\n\n      warnAboutAccessingRef.isReactWarning = true;\n      Object.defineProperty(props, 'ref', {\n        get: warnAboutAccessingRef,\n        configurable: true\n      });\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nfunction ReactElement(type, key, _ref, self, source, owner, props) {\n  var ref;\n\n  {\n    ref = _ref;\n  }\n\n  var element;\n\n  {\n    // In prod, `ref` is a regular property. It will be removed in a\n    // future release.\n    element = {\n      // This tag allows us to uniquely identify this as a React Element\n      $$typeof: REACT_ELEMENT_TYPE,\n      // Built-in properties that belong on the element\n      type: type,\n      key: key,\n      ref: ref,\n      props: props,\n      // Record the component responsible for creating this element.\n      _owner: owner\n    };\n  }\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // debugInfo contains Server Component debug information.\n\n    Object.defineProperty(element, '_debugInfo', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: null\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\nvar didWarnAboutKeySpread = {};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV$1(type, config, maybeKey, isStaticChildren, source, self) {\n  {\n    if (!isValidElementType(type)) {\n      // This is an invalid element type.\n      //\n      // We warn in this case but don't throw. We expect the element creation to\n      // succeed and there will likely be errors in render.\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    } else {\n      // This is a valid element type.\n      // Skip key warning if the type isn't valid since our key validation logic\n      // doesn't expect a non-string/function type and can throw confusing\n      // errors. We don't want exception behavior to differ between dev and\n      // prod. (Rendering will throw with a helpful message and as soon as the\n      // type is fixed, the key warnings will appear.)\n      var children = config.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    } // Warn about key spread regardless of whether the type is valid.\n\n\n    if (hasOwnProperty.call(config, 'key')) {\n      var componentName = getComponentNameFromType(type);\n      var keys = Object.keys(config).filter(function (k) {\n        return k !== 'key';\n      });\n      var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      {\n        ref = config.ref;\n      }\n\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && // Skip over reserved prop names\n      propName !== 'key' && (propName !== 'ref')) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    var element = ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    }\n\n    return element;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) ; else if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nvar ownerHasKeyUseWarning = {};\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = getComponentNameFromType(parentType);\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  // TODO: Move this to render phase instead of at element creation.\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement(null);\n    }\n  }\n}\n\nvar jsxDEV = jsxDEV$1 ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanM/MDhiYSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Cdevma%5C%5Cprojects%5C%5Cflashcards-enfermagem%5C%5Capp%5C%5Csimulado%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);